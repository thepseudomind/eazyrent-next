{"ast":null,"code":"var _jsxFileName = \"/Users/kenny/eazyrent/components/PaymentForm/PaymentForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Bank } from '../../types/types';\nimport PaymentFormStyle from './PaymentFormStyle';\n\nvar PaymentForm = function PaymentForm(_ref) {\n  var changeInput = _ref.changeInput,\n      form = _ref.form,\n      changeForm = _ref.changeForm,\n      addToBanks = _ref.addToBanks,\n      overwriteBank = _ref.overwriteBank,\n      bankToEdit = _ref.bankToEdit;\n\n  switch (form) {\n    case 'add':\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"payment-form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Add new bank\"), __jsx(\"a\", {\n        href: \"#\",\n        className: \"payment-form__close\",\n        onClick: function onClick() {\n          return changeForm('');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"payment-from__close--icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"X\")))), __jsx(\"form\", {\n        className: \"payment-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"bank\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"bank name\"), __jsx(\"input\", {\n        type: \"input\",\n        placeholder: \"XYZ Bank\",\n        className: \"payment-form__form--input\",\n        id: \"bank\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"bank\",\n        className: \"payment-form__form--error\",\n        id: \"bank-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Kindly put in a valid bank name\")), __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"account\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"account number\"), __jsx(\"input\", {\n        type: \"input\",\n        placeholder: \"0011223344\",\n        className: \"payment-form__form--input\",\n        id: \"account\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"account\",\n        className: \"payment-form__form--error\",\n        id: \"account-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Invalid account number\"))), __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"bvn\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"bvn number\"), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"99887766554433\",\n        className: \"payment-form__form--input\",\n        id: \"bvn\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"bvn\",\n        className: \"payment-form__form--error\",\n        id: \"bvn-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Invalid BVN number\")), __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"type\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Account Type\"), __jsx(\"select\", {\n        className: \"payment-form__form--select\",\n        id: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"None\"), __jsx(\"option\", {\n        value: \"current\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Current\"), __jsx(\"option\", {\n        value: \"savings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Savings\"), __jsx(\"option\", {\n        value: \"domiciliary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Domicilary\")), __jsx(\"label\", {\n        htmlFor: \"type\",\n        className: \"payment-form__form--error\",\n        id: \"type-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Kindly choose account type\"))), __jsx(\"a\", {\n        href: \"#\",\n        className: \"payment-form__btn\",\n        onClick: function onClick() {\n          validateForm();\n          addToBankAfterValidation(addToBanks, changeForm);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Save changes\"))), __jsx(PaymentFormStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n\n    case 'edit':\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"payment-form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Edit bank\"), __jsx(\"a\", {\n        href: \"#\",\n        className: \"payment-form__close\",\n        onClick: function onClick() {\n          return changeForm('');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"payment-from__close--icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"X\"))), __jsx(\"form\", {\n        className: \"payment-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"bank\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"bank name\"), __jsx(\"input\", {\n        type: \"input\",\n        placeholder: \"XYZ Bank\",\n        className: \"payment-form__form--input\",\n        id: \"bank\",\n        autoComplete: \"off\",\n        value: bankToEdit.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"bank\",\n        className: \"payment-form__form--error\",\n        id: \"bank-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Kindly put in a valid bank name\")), __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"account\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"account number\"), __jsx(\"input\", {\n        type: \"input\",\n        placeholder: \"0011223344\",\n        className: \"payment-form__form--input\",\n        id: \"account\",\n        autoComplete: \"off\",\n        value: bankToEdit.account,\n        onChange: changeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"account\",\n        className: \"payment-form__form--error\",\n        id: \"account-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Invalid account number\"))), __jsx(\"div\", {\n        className: \"payment-form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"bvn\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"bvn number\"), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"99887766554433\",\n        className: \"payment-form__form--input\",\n        id: \"bvn\",\n        autoComplete: \"off\",\n        value: bankToEdit.bvn,\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"bvn\",\n        className: \"payment-form__form--error\",\n        id: \"bvn-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Invalid BVN number\")), __jsx(\"div\", {\n        className: \"payment-form__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"type\",\n        className: \"payment-form__form--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Account Type\"), __jsx(\"select\", {\n        className: \"payment-form__form--select\",\n        id: \"type\",\n        value: bankToEdit.type,\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"None\"), __jsx(\"option\", {\n        value: \"current\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Current\"), __jsx(\"option\", {\n        value: \"savings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Savings\"), __jsx(\"option\", {\n        value: \"domiciliary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Domicilary\")), __jsx(\"label\", {\n        htmlFor: \"type\",\n        className: \"payment-form__form--error\",\n        id: \"type-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Kindly choose account type\"))), __jsx(\"a\", {\n        href: \"#\",\n        className: \"payment-form__btn\",\n        onClick: function onClick() {\n          validateForm();\n          overwriteBankAfterValidation(overwriteBank, bankToEdit, changeForm);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Save changes\"))), __jsx(PaymentFormStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n\n    default:\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"payment-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        className: \"payment-bg__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Click on a bank card to edit it or add a new Bank with the floating button\")), __jsx(PaymentFormStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n  }\n};\n\nexport default PaymentForm; //FUNCTIONS FOR FORM VALIDATION AND SUBMITTING\n\nvar validateForm = function validateForm() {\n  if (!document.getElementById('bank').value) {\n    console.log('Kindly put in a valid bank name');\n    document.getElementById('bank').classList.toggle('invalid');\n    document.getElementById('bank-label').classList.toggle('active');\n  }\n\n  if (document.getElementById('account').value.length !== 10 && !isNaN(document.getElementById('account').value)) {\n    console.log('Invalid account number');\n    document.getElementById('account').classList.toggle('invalid');\n    document.getElementById('account-label').classList.toggle('active');\n  }\n\n  if (document.getElementById('bvn').value.length !== 11 && !isNaN(document.getElementById('bvn').value)) {\n    console.log('Invalid BVN number');\n    document.getElementById('bvn').classList.toggle('invalid');\n    document.getElementById('bvn-label').classList.toggle('active');\n  }\n\n  if (document.getElementById('type').value === 'none') {\n    console.log('Kindly choose account type');\n    document.getElementById('type').classList.toggle('invalid');\n    document.getElementById('type-label').classList.toggle('active');\n  }\n}; //ADD TO BANK IF ALL VALIDATION IS PASSED\n\n\nvar addToBankAfterValidation = function addToBankAfterValidation(addToBanks, changeForm) {\n  if (document.getElementById('bank').value && document.getElementById('account').value.length === 10 && document.getElementById('bvn').value.length === 11 && document.getElementById('type').value !== 'none') {\n    addToBanks(new Bank(Math.floor(Math.random() * (100000 - 10000) + 10000), document.getElementById('bank').value, document.getElementById('account').value, document.getElementById('type').value, document.getElementById('bvn').value, 'under review'));\n    changeForm('');\n  }\n}; //OVERWRITE BANK IF ALL VALIDATION IS PASSED\n\n\nvar overwriteBankAfterValidation = function overwriteBankAfterValidation(overwriteBank, bankToEdit, changeForm) {\n  if (document.getElementById('bank').value && document.getElementById('account').value.length === 10 && document.getElementById('bvn').value.length === 11 && document.getElementById('type').value !== 'none') {\n    overwriteBank(new Bank(bankToEdit.id, document.getElementById('bank').value, document.getElementById('account').value, document.getElementById('type').value, document.getElementById('bvn').value, bankToEdit.status));\n    changeForm('');\n  }\n};","map":{"version":3,"sources":["/Users/kenny/eazyrent/components/PaymentForm/PaymentForm.js"],"names":["Bank","PaymentFormStyle","PaymentForm","changeInput","form","changeForm","addToBanks","overwriteBank","bankToEdit","validateForm","addToBankAfterValidation","name","account","bvn","type","overwriteBankAfterValidation","document","getElementById","value","console","log","classList","toggle","length","isNaN","Math","floor","random","id","status"],"mappings":"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","sourcesContent":["import { Bank } from '../../types/types';\nimport PaymentFormStyle from './PaymentFormStyle';\n\nconst PaymentForm = ({changeInput, form, changeForm, addToBanks, overwriteBank, bankToEdit})=>{\n    switch (form) {\n        case 'add':\n            return (\n                <div>\n                    <div className=\"payment-bg\">\n                        <div className=\"payment-form__header\">\n                            <div className=\"payment-form__row\">\n                                <h1 className=\"payment-form__title\">Add new bank</h1>\n                                <a href=\"#\" className=\"payment-form__close\" onClick={()=>changeForm('')}><span className=\"payment-from__close--icon\">X</span></a>\n                            </div>\n                        </div>\n                        <form className=\"payment-form\">\n                            <div className=\"payment-form__row\">\n                                <div className=\"payment-form__form\">\n                                <label htmlFor=\"bank\" className=\"payment-form__form--label\">bank name</label>\n                                    <input type=\"input\" placeholder=\"XYZ Bank\" className=\"payment-form__form--input\" id=\"bank\" autoComplete=\"off\"/>\n                                    <label htmlFor=\"bank\" className=\"payment-form__form--error\" id=\"bank-label\">Kindly put in a valid bank name</label>\n                                </div>\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"account\" className=\"payment-form__form--label\">account number</label>\n                                    <input type=\"input\" placeholder=\"0011223344\" className=\"payment-form__form--input\" id=\"account\" autoComplete=\"off\"/>\n                                    <label htmlFor=\"account\" className=\"payment-form__form--error\" id=\"account-label\">Invalid account number</label>\n                                </div>\n                            </div>\n                            <div className=\"payment-form__row\">\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"bvn\" className=\"payment-form__form--label\">bvn number</label>\n                                    <input type=\"text\" placeholder=\"99887766554433\" className=\"payment-form__form--input\" id=\"bvn\" autoComplete=\"off\"/>\n                                    <label htmlFor=\"bvn\" className=\"payment-form__form--error\" id=\"bvn-label\">Invalid BVN number</label>\n                                </div>\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"type\" className=\"payment-form__form--label\">Account Type</label>\n                                    <select className=\"payment-form__form--select\" id=\"type\">\n                                        <option value=\"none\">None</option>\n                                        <option value=\"current\">Current</option>\n                                        <option value=\"savings\">Savings</option>\n                                        <option value=\"domiciliary\">Domicilary</option>\n                                    </select>\n                                    <label htmlFor=\"type\" className=\"payment-form__form--error\" id=\"type-label\">Kindly choose account type</label>\n                                </div>\n                            </div>\n                            <a href='#' className=\"payment-form__btn\" onClick={\n                                ()=>{\n                                    validateForm();\n                                    addToBankAfterValidation(addToBanks, changeForm);\n                                }\n                            }>Save changes</a>\n                        </form>\n                    </div>\n                    <PaymentFormStyle/>\n                </div>\n            );\n\n        case 'edit':\n            return (\n                <div>\n                    <div className=\"payment-bg\">\n                        <div className=\"payment-form__row\">\n                            <h1 className=\"payment-form__title\">Edit bank</h1>\n                            <a href=\"#\" className=\"payment-form__close\" onClick={()=>changeForm('')}><span className=\"payment-from__close--icon\">X</span></a>\n                        </div>\n                        <form className=\"payment-form\">\n                            <div className=\"payment-form__row\">\n                                <div className=\"payment-form__form\">\n                                <label htmlFor=\"bank\" className=\"payment-form__form--label\">bank name</label>\n                                    <input type=\"input\" placeholder=\"XYZ Bank\" className=\"payment-form__form--input\" id=\"bank\" autoComplete=\"off\" value={bankToEdit.name}/>\n                                    <label htmlFor=\"bank\" className=\"payment-form__form--error\" id=\"bank-label\">Kindly put in a valid bank name</label>\n                                </div>\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"account\" className=\"payment-form__form--label\">account number</label>\n                                    <input type=\"input\" placeholder=\"0011223344\" className=\"payment-form__form--input\" id=\"account\" autoComplete=\"off\" value={bankToEdit.account} onChange={changeInput}/>\n                                    <label htmlFor=\"account\" className=\"payment-form__form--error\" id=\"account-label\">Invalid account number</label>\n                                </div>\n                            </div>\n                            <div className=\"payment-form__row\">\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"bvn\" className=\"payment-form__form--label\">bvn number</label>\n                                    <input type=\"text\" placeholder=\"99887766554433\" className=\"payment-form__form--input\" id=\"bvn\" autoComplete=\"off\" value={bankToEdit.bvn} onChange={()=>{}}/>\n                                    <label htmlFor=\"bvn\" className=\"payment-form__form--error\" id=\"bvn-label\">Invalid BVN number</label>\n                                </div>\n                                <div className=\"payment-form__form\">\n                                    <label htmlFor=\"type\" className=\"payment-form__form--label\">Account Type</label>\n                                    <select className=\"payment-form__form--select\" id=\"type\" value={bankToEdit.type} onChange={()=>{}}>\n                                        <option value=\"none\">None</option>\n                                        <option value=\"current\">Current</option>\n                                        <option value=\"savings\">Savings</option>\n                                        <option value=\"domiciliary\">Domicilary</option>\n                                    </select>\n                                    <label htmlFor=\"type\" className=\"payment-form__form--error\" id=\"type-label\">Kindly choose account type</label>\n                                </div>\n                            </div>\n                            <a href='#' className=\"payment-form__btn\" onClick={\n                                ()=>{\n                                    validateForm();\n                                    overwriteBankAfterValidation(overwriteBank, bankToEdit, changeForm);\n                                }\n                            }>Save changes</a>\n                        </form>\n                    </div>\n                    <PaymentFormStyle/>\n                </div>\n            );\n    \n        default:\n            return (\n                <div>\n                    <div className=\"payment-bg\">\n                        <p className=\"payment-bg__text\">Click on a bank card to edit it or add a new Bank with the floating button</p>\n                    </div>\n                    <PaymentFormStyle/>\n                </div>\n            );\n    }\n}\n\nexport default PaymentForm;\n\n//FUNCTIONS FOR FORM VALIDATION AND SUBMITTING\n\n const validateForm = ()=>{\n        if(!document.getElementById('bank').value){\n            console.log('Kindly put in a valid bank name');\n            document.getElementById('bank').classList.toggle('invalid');\n            document.getElementById('bank-label').classList.toggle('active');\n        }\n        if(document.getElementById('account').value.length !== 10 && !isNaN(document.getElementById('account').value)){\n            console.log('Invalid account number');\n            document.getElementById('account').classList.toggle('invalid');\n            document.getElementById('account-label').classList.toggle('active');\n        }\n        if(document.getElementById('bvn').value.length !== 11  && !isNaN(document.getElementById('bvn').value)){\n            console.log('Invalid BVN number');\n            document.getElementById('bvn').classList.toggle('invalid');\n            document.getElementById('bvn-label').classList.toggle('active');\n        }\n        if(document.getElementById('type').value === 'none'){\n            console.log('Kindly choose account type');\n            document.getElementById('type').classList.toggle('invalid');\n            document.getElementById('type-label').classList.toggle('active');\n        }\n    }\n\n    //ADD TO BANK IF ALL VALIDATION IS PASSED\n    const addToBankAfterValidation = (addToBanks, changeForm)=>{\n        if(document.getElementById('bank').value && document.getElementById('account').value.length === 10 && document.getElementById('bvn').value.length === 11 && document.getElementById('type').value !== 'none'){\n            addToBanks(\n                new Bank(\n                    Math.floor(Math.random() * (100000 - 10000) + 10000),\n                    document.getElementById('bank').value, \n                    document.getElementById('account').value, \n                    document.getElementById('type').value, \n                    document.getElementById('bvn').value,\n                    'under review'\n                )\n            );\n            changeForm('');\n        }\n    }\n\n    //OVERWRITE BANK IF ALL VALIDATION IS PASSED\n    const overwriteBankAfterValidation = (overwriteBank, bankToEdit, changeForm)=>{\n        if(document.getElementById('bank').value && document.getElementById('account').value.length === 10 && document.getElementById('bvn').value.length === 11 && document.getElementById('type').value !== 'none'){\n            overwriteBank(\n                new Bank(\n                    bankToEdit.id,\n                    document.getElementById('bank').value, \n                    document.getElementById('account').value, \n                    document.getElementById('type').value, \n                    document.getElementById('bvn').value,\n                    bankToEdit.status\n                )\n            );\n            changeForm('');\n        }\n    }\n"]},"metadata":{},"sourceType":"module"}