{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kenny/eazyrent/pages/edit-listing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Router, { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst editListing = ({\n  listing\n}) => {\n  const router = useRouter();\n  const listingID = router.query.id;\n\n  const overwriteListing = async id => {\n    const dataToPost = {\n      name: document.getElementById('title').value,\n      address: document.getElementById('address').value,\n      price: document.getElementById('price').value,\n      type: document.getElementById('payment').value,\n      beds: document.getElementById('beds').value,\n      baths: document.getElementById('baths').value,\n      description: document.getElementById('description').value\n    };\n    const res = await fetch(`http://localhost:3004/listings/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify(dataToPost)\n    });\n    const data = await res.json();\n    console.log('Success', _JSON$stringify(data));\n    Router.push('/listings');\n  };\n\n  return __jsx(Dashboard, {\n    route: \"edit-listing\",\n    listingID: listingID,\n    listingToEdit: listing,\n    overwriteListing: overwriteListing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\neditListing.getInitialProps = async router => {\n  const res = await fetch(`http://localhost:3004/listings/${router.query.id}`);\n  const data = await res.json();\n  return {\n    listing: data\n  };\n};\n\nexport default editListing;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/edit-listing.js"],"names":["fetch","Router","useRouter","Dashboard","editListing","listing","router","listingID","query","id","overwriteListing","dataToPost","name","document","getElementById","value","address","price","type","beds","baths","description","res","method","headers","body","data","json","console","log","push","getInitialProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC7B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA/B;;AAEA,QAAMC,gBAAgB,GAAG,MAAMD,EAAN,IAAW;AAChC,UAAME,UAAU,GAAG;AACfC,MAAAA,IAAI,EAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KADzB;AAEfC,MAAAA,OAAO,EAAEH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAF7B;AAGfE,MAAAA,KAAK,EAAGJ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAH1B;AAIfG,MAAAA,IAAI,EAAGL,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAJ3B;AAKfI,MAAAA,IAAI,EAAGN,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KALxB;AAMfK,MAAAA,KAAK,EAAGP,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAN1B;AAOfM,MAAAA,WAAW,EAAGR,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC;AAPtC,KAAnB;AAUA,UAAMO,GAAG,GAAG,MAAMtB,KAAK,CAAE,kCAAiCS,EAAG,EAAtC,EAAyC;AAC5Dc,MAAAA,MAAM,EAAE,OADoD;AAE5DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFmD;AAK5DC,MAAAA,IAAI,EAAE,gBAAed,UAAf;AALsD,KAAzC,CAAvB;AAOA,UAAMe,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,gBAAeH,IAAf,CAAvB;AAEAzB,IAAAA,MAAM,CAAC6B,IAAP,CAAY,WAAZ;AACH,GAtBD;;AAwBA,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,SAAS,EAAEvB,SAA3C;AAAsD,IAAA,aAAa,EAAEF,OAArE;AAA8E,IAAA,gBAAgB,EAAEK,gBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CA7BD;;AA+BAN,WAAW,CAAC2B,eAAZ,GAA8B,MAAMzB,MAAN,IAAe;AACzC,QAAMgB,GAAG,GAAG,MAAMtB,KAAK,CAAE,kCAAiCM,MAAM,CAACE,KAAP,CAAaC,EAAG,EAAnD,CAAvB;AACA,QAAMiB,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AAEA,SAAO;AACHtB,IAAAA,OAAO,EAAEqB;AADN,GAAP;AAGH,CAPD;;AASA,eAAetB,WAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport Router, { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst editListing = ({listing})=>{\n    const router = useRouter();\n    const listingID = router.query.id;\n\n    const overwriteListing = async(id)=>{\n        const dataToPost = {\n            name : document.getElementById('title').value,\n            address: document.getElementById('address').value,\n            price : document.getElementById('price').value,\n            type : document.getElementById('payment').value,\n            beds : document.getElementById('beds').value,\n            baths : document.getElementById('baths').value,\n            description : document.getElementById('description').value,\n        }\n\n        const res = await fetch(`http://localhost:3004/listings/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(dataToPost)\n        });\n        const data = await res.json();\n        console.log('Success', JSON.stringify(data));\n\n        Router.push('/listings');\n    }\n\n    return <Dashboard route=\"edit-listing\" listingID={listingID} listingToEdit={listing} overwriteListing={overwriteListing}/>\n}\n\neditListing.getInitialProps = async(router)=>{\n    const res = await fetch(`http://localhost:3004/listings/${router.query.id}`);\n    const data = await res.json();\n\n    return {\n        listing: data\n    }\n}\n\nexport default editListing;"]},"metadata":{},"sourceType":"module"}