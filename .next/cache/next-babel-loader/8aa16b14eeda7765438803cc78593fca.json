{"ast":null,"code":"var _jsxFileName = \"/Users/kenny/eazyrent/pages/payment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Bank } from '../types/types';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Cookie from 'js-cookie';\nimport cookie from 'next-cookies';\n\nconst payment = ({\n  initialBanks\n}) => {\n  const {\n    0: message,\n    1: setAlertMessage\n  } = useState('');\n  const {\n    0: banks,\n    1: bankStatus\n  } = useState(initialBanks ? initialBanks : []);\n  const {\n    0: bankToEdit,\n    1: setBankToEdit\n  } = useState(undefined);\n  useEffect(() => {\n    Cookie.set('banks', banks);\n  });\n\n  const showAlert = newMessage => {\n    setAlertMessage(newMessage);\n  };\n\n  const addNewBank = newBank => {\n    if (banks.length >= 1) {\n      for (const bank of banks) {\n        if (bank.account === newBank.account) {\n          setAlertMessage('Bank already added');\n        } else {\n          bankStatus([...banks, newBank]);\n        }\n      }\n    } else {\n      bankStatus([...banks, newBank]);\n    }\n  };\n\n  const editBank = id => {\n    ;\n    setBankToEdit(banks[id]);\n  };\n\n  const changeInput = e => {\n    console.log(bankToEdit[`${e.target.id}`]);\n    bankToEdit[`${e.target.id}`] = e.target.value;\n    setBankToEdit(bankToEdit);\n  };\n\n  const overwriteBank = newBank => {\n    let index = banks.indexOf(bankToEdit);\n    banks.splice(index, 1, newBank);\n    bankStatus(banks);\n  };\n\n  const deleteBank = id => {\n    banks.splice(id, 1);\n    bankStatus([...banks]);\n    setAlertMessage('Bank deleted');\n    setTimeout(() => setAlertMessage(''), 2000);\n  };\n\n  const {\n    0: form,\n    1: changeForm\n  } = useState('');\n\n  const changeActiveForm = newForm => {\n    changeForm(newForm);\n  };\n\n  return __jsx(Dashboard, {\n    pageTitle: \"Payments - EazyRent\",\n    route: \"payment\",\n    changeInput: changeInput,\n    banks: banks,\n    addBank: addNewBank,\n    editBank: editBank,\n    deleteBank: deleteBank,\n    overwriteBank: overwriteBank,\n    bankToEdit: bankToEdit,\n    form: form,\n    changeForm: changeActiveForm,\n    alert: message,\n    showAlert: showAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n};\n\npayment.getInitialProps = ctx => {\n  const cookies = cookie(ctx);\n  return {\n    initialBanks: cookies.banks\n  };\n};\n\nexport default payment;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/payment.js"],"names":["useState","useEffect","Bank","Dashboard","Cookie","cookie","payment","initialBanks","message","setAlertMessage","banks","bankStatus","bankToEdit","setBankToEdit","undefined","set","showAlert","newMessage","addNewBank","newBank","length","bank","account","editBank","id","changeInput","e","console","log","target","value","overwriteBank","index","indexOf","splice","deleteBank","setTimeout","form","changeForm","changeActiveForm","newForm","getInitialProps","ctx","cookies"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Bank } from '../types/types';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport Cookie from 'js-cookie';\nimport cookie from 'next-cookies';\n\nconst payment = ({initialBanks})=> {\n    const [message, setAlertMessage] = useState('');\n    const [banks, bankStatus] = useState((initialBanks) ? initialBanks : []);\n    const [bankToEdit, setBankToEdit] = useState(undefined);\n\n    useEffect(()=>{\n        Cookie.set('banks', banks);\n    });\n\n    const showAlert = (newMessage) =>{\n        setAlertMessage(newMessage);\n    }\n\n    const addNewBank = (newBank) =>{\n        if(banks.length >= 1){\n            for (const bank of banks) {\n                if(bank.account === newBank.account){\n                    setAlertMessage('Bank already added');\n                }else{\n                    bankStatus([...banks, newBank]);\n                }\n            }\n        }else{\n            bankStatus([...banks, newBank]);\n        }\n    }\n\n    const editBank = (id)=>{;\n        setBankToEdit(banks[id]);        \n    }\n\n    const changeInput = (e)=>{\n        console.log(bankToEdit[`${e.target.id}`]);\n        bankToEdit[`${e.target.id}`] = e.target.value;\n        setBankToEdit(bankToEdit);\n    }\n\n    const overwriteBank = (newBank)=>{\n        let index = banks.indexOf(bankToEdit);\n        banks.splice(index, 1, newBank);\n        bankStatus(banks);\n    }\n\n    const deleteBank = (id) =>{\n        banks.splice(id, 1);\n        bankStatus([...banks]);\n        setAlertMessage('Bank deleted');\n        setTimeout(()=>setAlertMessage(''), 2000);\n    }\n\n    const [form, changeForm] = useState('');\n\n    const changeActiveForm = (newForm) => {\n        changeForm(newForm);\n    }\n\n    return <Dashboard pageTitle=\"Payments - EazyRent\" route=\"payment\" changeInput={changeInput} banks={banks} addBank={addNewBank} editBank={editBank} deleteBank={deleteBank} overwriteBank={overwriteBank} bankToEdit={bankToEdit} form={form} changeForm={changeActiveForm} alert={message} showAlert={showAlert}/>;\n};\n\npayment.getInitialProps = (ctx)=>{\n    const cookies = cookie(ctx);\n    return {\n        initialBanks: cookies.banks\n    };\n}\n\nexport default payment;"]},"metadata":{},"sourceType":"module"}