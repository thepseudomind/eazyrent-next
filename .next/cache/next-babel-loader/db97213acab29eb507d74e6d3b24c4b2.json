{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"/Users/kenny/eazyrent/pages/view-listing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nvar viewlisting = function viewlisting(_ref) {\n  var listings = _ref.listings;\n  var router = useRouter();\n  var fetchedListing;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(listings), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var listing = _step.value;\n      console.log(listing.id);\n      console.log(router.query.id);\n\n      if (listing.id === router.query.id.toString()) {\n        fetchedListing = listing;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  console.log(fetchedListing);\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Hi\", fetchedListing.name);\n  return __jsx(Dashboard, {\n    route: \"view-listing\",\n    listing: fetchedListing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n};\n\nviewlisting.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3004/listings'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            listings: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default viewlisting;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/view-listing.js"],"names":["useRouter","Dashboard","viewlisting","listings","router","fetchedListing","listing","console","log","id","query","toString","name","getInitialProps","fetch","res","json","data"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC9B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAIK,cAAJ;AAF8B;AAAA;AAAA;;AAAA;AAI9B,sCAAsBF,QAAtB,4GAAgC;AAAA,UAArBG,OAAqB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,EAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACM,KAAP,CAAaD,EAAzB;;AAEA,UAAGH,OAAO,CAACG,EAAR,KAAeL,MAAM,CAACM,KAAP,CAAaD,EAAb,CAAgBE,QAAhB,EAAlB,EAA6C;AACzCN,QAAAA,cAAc,GAAGC,OAAjB;AACH;AACJ;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY9BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,cAAc,CAACO,IAArB,CAAP;AACA,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,OAAO,EAAEP,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAjBD;;AAmBAH,WAAW,CAACW,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRC,KAAK,CAAC,gCAAD,CADG;;AAAA;AACpBC,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBC,UAAAA,IAFoB;AAAA,2CAInB;AACHd,YAAAA,QAAQ,EAAEc;AADP,WAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AASA,eAAef,WAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst viewlisting = ({listings})=>{\n    const router = useRouter();\n    let fetchedListing;\n\n    for (const listing of listings) {\n        console.log(listing.id);\n        console.log(router.query.id);\n        \n        if(listing.id === router.query.id.toString()){\n            fetchedListing = listing;\n        }\n    }\n    console.log(fetchedListing);\n    \n    \n    return <p>Hi{fetchedListing.name}</p>\n    return <Dashboard route=\"view-listing\" listing={fetchedListing}/>;\n}\n\nviewlisting.getInitialProps = async()=>{\n    const res = await fetch('http://localhost:3004/listings');\n    const data = await res.json();\n\n    return {\n        listings: data\n    }\n};\n\nexport default viewlisting;"]},"metadata":{},"sourceType":"module"}