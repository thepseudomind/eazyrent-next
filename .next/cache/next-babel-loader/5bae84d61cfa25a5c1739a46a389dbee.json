{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kenny/eazyrent/pages/add-listing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nvar addlisting = function addlisting() {\n  //user: \"abgfigu143668\"\n  var imagesToBeUploaded = [];\n\n  var submitForm = function submitForm() {\n    var dataToPost, res, data;\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataToPost = {\n              user: \"j64ew0u143668\",\n              name: document.getElementById('title').value,\n              address: document.getElementById('address').value,\n              price: document.getElementById('price').value,\n              type: document.getElementById('payment').value,\n              city: document.getElementById('city').value,\n              state: document.getElementById('state').value,\n              beds: document.getElementById('beds').value,\n              baths: document.getElementById('baths').value,\n              description: document.getElementById('description').value,\n              images: imagesToBeUploaded,\n              likes: []\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3004/listings', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify(dataToPost)\n            }));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context.sent;\n            console.log('Success', _JSON$stringify(data));\n            Router.push('/listings');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var getImages = function getImages(images) {\n    imagesToBeUploaded = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(images), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var image = _step.value;\n        convertImages(image);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var convertImages = function convertImages(image) {\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      imagesToBeUploaded.push(reader.result);\n    });\n    reader.readAsDataURL(image);\n  };\n\n  return __jsx(Dashboard, {\n    route: \"add-listing\",\n    addListing: submitForm,\n    getImages: getImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nexport default addlisting;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/add-listing.js"],"names":["Router","Dashboard","addlisting","imagesToBeUploaded","submitForm","dataToPost","user","name","document","getElementById","value","address","price","type","city","state","beds","baths","description","images","likes","fetch","method","headers","body","res","json","data","console","log","push","getImages","image","convertImages","reader","FileReader","addEventListener","result","readAsDataURL"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAI;AACnB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,UADS,GACI;AACfC,cAAAA,IAAI,EAAE,eADS;AAEfC,cAAAA,IAAI,EAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAFzB;AAGfC,cAAAA,OAAO,EAAEH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAH7B;AAIfE,cAAAA,KAAK,EAAGJ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAJ1B;AAKfG,cAAAA,IAAI,EAAGL,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAL3B;AAMfI,cAAAA,IAAI,EAAGN,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KANxB;AAOfK,cAAAA,KAAK,EAAGP,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAP1B;AAQfM,cAAAA,IAAI,EAAGR,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KARxB;AASfO,cAAAA,KAAK,EAAGT,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAT1B;AAUfQ,cAAAA,WAAW,EAAGV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAVtC;AAWfS,cAAAA,MAAM,EAAGhB,kBAXM;AAYfiB,cAAAA,KAAK,EAAG;AAZO,aADJ;AAAA;AAAA,6CAgBGC,KAAK,CAAC,gCAAD,EAAmC;AACtDC,cAAAA,MAAM,EAAE,MAD8C;AAEtDC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF6C;AAKtDC,cAAAA,IAAI,EAAE,gBAAenB,UAAf;AALgD,aAAnC,CAhBR;;AAAA;AAgBToB,YAAAA,GAhBS;AAAA;AAAA,6CAuBIA,GAAG,CAACC,IAAJ,EAvBJ;;AAAA;AAuBTC,YAAAA,IAvBS;AAwBfC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,gBAAeF,IAAf,CAAvB;AAEA3B,YAAAA,MAAM,CAAC8B,IAAP,CAAY,WAAZ;;AA1Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AA6BA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACZ,MAAD,EAAU;AACxBhB,IAAAA,kBAAkB,GAAG,EAArB;AADwB;AAAA;AAAA;;AAAA;AAExB,wCAAoBgB,MAApB,4GAA4B;AAAA,YAAjBa,KAAiB;AAC1BC,QAAAA,aAAa,CAACD,KAAD,CAAb;AACD;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B,GALD;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,KAAD,EAAS;AAC3B,QAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAI;AAChCjC,MAAAA,kBAAkB,CAAC2B,IAAnB,CAAwBI,MAAM,CAACG,MAA/B;AACH,KAFD;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,KAArB;AACH,GAND;;AAQA,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,UAAU,EAAE5B,UAA3C;AAAuD,IAAA,SAAS,EAAE2B,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAhDD;;AAkDA,eAAe7B,UAAf","sourcesContent":["import Router from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst addlisting = ()=>{\n    //user: \"abgfigu143668\"\n    let imagesToBeUploaded = [];\n    const submitForm = async()=>{\n        const dataToPost = {\n            user: \"j64ew0u143668\",\n            name : document.getElementById('title').value,\n            address: document.getElementById('address').value,\n            price : document.getElementById('price').value,\n            type : document.getElementById('payment').value,\n            city : document.getElementById('city').value,\n            state : document.getElementById('state').value,\n            beds : document.getElementById('beds').value,\n            baths : document.getElementById('baths').value,\n            description : document.getElementById('description').value,\n            images : imagesToBeUploaded,\n            likes : []\n        }\n\n        const res = await fetch('http://localhost:3004/listings', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(dataToPost)\n        });\n        const data = await res.json();\n        console.log('Success', JSON.stringify(data));\n\n        Router.push('/listings');\n    }\n\n    const getImages = (images)=>{\n        imagesToBeUploaded = [];\n        for (const image of images) {\n          convertImages(image);  \n        }\n    }\n\n    const convertImages = (image)=>{\n        const reader = new FileReader();\n        reader.addEventListener('load', ()=>{\n            imagesToBeUploaded.push(reader.result);\n        });\n        reader.readAsDataURL(image);\n    }\n\n    return <Dashboard route=\"add-listing\" addListing={submitForm} getImages={getImages}/>;\n}\n\nexport default addlisting;"]},"metadata":{},"sourceType":"module"}