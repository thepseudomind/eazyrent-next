{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"/Users/kenny/eazyrent/pages/view-listing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nvar viewlisting = function viewlisting(_ref) {\n  var users = _ref.users;\n  var router = useRouter();\n  var fetchedListing = [];\n\n  for (var user in users) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(users[user].listings), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var listing = _step.value;\n        console.log(listing.id);\n\n        if (listing.id === router.query.id) {\n          fetchedListing = listing;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return __jsx(Dashboard, {\n    route: \"view-listing\",\n    id: router.query.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nviewlisting.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3004/users'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            users: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default viewlisting;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/view-listing.js"],"names":["useRouter","Dashboard","viewlisting","users","router","fetchedListing","user","listings","listing","console","log","id","query","getInitialProps","fetch","res","json","data"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAW;AAAA,MAATC,KAAS,QAATA,KAAS;AAC3B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAIK,cAAc,GAAG,EAArB;;AAEA,OAAK,IAAMC,IAAX,IAAmBH,KAAnB,EAAyB;AAAA;AAAA;AAAA;;AAAA;AACrB,wCAAqBA,KAAK,CAACG,IAAD,CAAL,CAAYC,QAAjC,4GAA0C;AAAA,YAAhCC,OAAgC;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,EAApB;;AACA,YAAGH,OAAO,CAACG,EAAR,KAAeP,MAAM,CAACQ,KAAP,CAAaD,EAA/B,EAAkC;AAC9BN,UAAAA,cAAc,GAAGG,OAAjB;AACH;AACJ;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxB;;AAED,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,EAAE,EAAEJ,MAAM,CAACQ,KAAP,CAAaD,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAdD;;AAgBAT,WAAW,CAACW,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRC,KAAK,CAAC,6BAAD,CADG;;AAAA;AACpBC,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBC,UAAAA,IAFoB;AAAA,2CAInB;AACHd,YAAAA,KAAK,EAAEc;AADJ,WAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AASA,eAAef,WAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst viewlisting = ({users})=>{\n    const router = useRouter();\n    let fetchedListing = [];\n\n    for (const user in users){\n        for(const listing of users[user].listings){\n            console.log(listing.id);\n            if(listing.id === router.query.id){\n                fetchedListing = listing;\n            }\n        }\n    }\n    \n    return <Dashboard route=\"view-listing\" id={router.query.id}/>;\n}\n\nviewlisting.getInitialProps = async()=>{\n    const res = await fetch('http://localhost:3004/users');\n    const data = await res.json();\n\n    return {\n        users: data\n    }\n};\n\nexport default viewlisting;"]},"metadata":{},"sourceType":"module"}