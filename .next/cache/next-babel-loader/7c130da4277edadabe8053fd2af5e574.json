{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kenny/eazyrent/pages/add-listing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst addlisting = () => {\n  let imagesToBeUploaded = [];\n\n  const submitForm = async () => {\n    const dataToPost = {\n      user: \"abgfigu143668\",\n      name: document.getElementById('title').value,\n      address: document.getElementById('address').value,\n      price: document.getElementById('price').value,\n      type: document.getElementById('payment').value,\n      city: document.getElementById('city').value,\n      state: document.getElementById('state').value,\n      beds: document.getElementById('beds').value,\n      baths: document.getElementById('baths').value,\n      images: imagesToBeUploaded\n    };\n    const res = await fetch('http://localhost:3004/listings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify(dataToPost)\n    });\n    const data = await res.json();\n    console.log('Success', _JSON$stringify(data));\n  };\n\n  const getImages = images => {\n    imagesToBeUploaded = [];\n    console.log(images);\n\n    for (const image of images) {\n      convertImages(image);\n    }\n  };\n\n  const convertImages = image => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      imagesToBeUploaded.push(reader.result);\n    });\n    reader.readAsDataURL(image);\n    console.log(imagesToBeUploaded, imagesToBeUploaded.length);\n  };\n\n  return __jsx(Dashboard, {\n    route: \"add-listing\",\n    addListing: submitForm,\n    getImages: getImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};\n\nexport default addlisting;","map":{"version":3,"sources":["/Users/kenny/eazyrent/pages/add-listing.js"],"names":["Dashboard","addlisting","imagesToBeUploaded","submitForm","dataToPost","user","name","document","getElementById","value","address","price","type","city","state","beds","baths","images","res","fetch","method","headers","body","data","json","console","log","getImages","image","convertImages","reader","FileReader","addEventListener","push","result","readAsDataURL","length"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAI;AACnB,MAAIC,kBAAkB,GAAG,EAAzB;;AACA,QAAMC,UAAU,GAAG,YAAS;AACxB,UAAMC,UAAU,GAAG;AACfC,MAAAA,IAAI,EAAE,eADS;AAEfC,MAAAA,IAAI,EAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAFzB;AAGfC,MAAAA,OAAO,EAAEH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAH7B;AAIfE,MAAAA,KAAK,EAAGJ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAJ1B;AAKfG,MAAAA,IAAI,EAAGL,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAL3B;AAMfI,MAAAA,IAAI,EAAGN,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KANxB;AAOfK,MAAAA,KAAK,EAAGP,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAP1B;AAQfM,MAAAA,IAAI,EAAGR,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KARxB;AASfO,MAAAA,KAAK,EAAGT,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAT1B;AAUfQ,MAAAA,MAAM,EAAGf;AAVM,KAAnB;AAaA,UAAMgB,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6C;AAKtDC,MAAAA,IAAI,EAAE,gBAAelB,UAAf;AALgD,KAAnC,CAAvB;AAOA,UAAMmB,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,gBAAeH,IAAf,CAAvB;AACH,GAvBD;;AAyBA,QAAMI,SAAS,GAAIV,MAAD,IAAU;AACxBf,IAAAA,kBAAkB,GAAG,EAArB;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AACA,SAAK,MAAMW,KAAX,IAAoBX,MAApB,EAA4B;AAC1BY,MAAAA,aAAa,CAACD,KAAD,CAAb;AACD;AACJ,GAND;;AAQA,QAAMC,aAAa,GAAID,KAAD,IAAS;AAC3B,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAI;AAChC9B,MAAAA,kBAAkB,CAAC+B,IAAnB,CAAwBH,MAAM,CAACI,MAA/B;AACH,KAFD;AAGAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBP,KAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYxB,kBAAZ,EAAgCA,kBAAkB,CAACkC,MAAnD;AACH,GAPD;;AASA,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,UAAU,EAAEjC,UAA3C;AAAuD,IAAA,SAAS,EAAEwB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CA7CD;;AA+CA,eAAe1B,UAAf","sourcesContent":["import Dashboard from '../components/Dashboard/Dashboard';\n\nconst addlisting = ()=>{\n    let imagesToBeUploaded = [];\n    const submitForm = async()=>{\n        const dataToPost = {\n            user: \"abgfigu143668\",\n            name : document.getElementById('title').value,\n            address: document.getElementById('address').value,\n            price : document.getElementById('price').value,\n            type : document.getElementById('payment').value,\n            city : document.getElementById('city').value,\n            state : document.getElementById('state').value,\n            beds : document.getElementById('beds').value,\n            baths : document.getElementById('baths').value,\n            images : imagesToBeUploaded\n        }\n\n        const res = await fetch('http://localhost:3004/listings', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(dataToPost)\n        });\n        const data = await res.json();\n        console.log('Success', JSON.stringify(data));\n    }\n\n    const getImages = (images)=>{\n        imagesToBeUploaded = [];\n        console.log(images);\n        for (const image of images) {\n          convertImages(image);  \n        }\n    }\n\n    const convertImages = (image)=>{\n        const reader = new FileReader();\n        reader.addEventListener('load', ()=>{\n            imagesToBeUploaded.push(reader.result);\n        });\n        reader.readAsDataURL(image);\n        console.log(imagesToBeUploaded, imagesToBeUploaded.length);\n    }\n\n    return <Dashboard route=\"add-listing\" addListing={submitForm} getImages={getImages}/>;\n}\n\nexport default addlisting;"]},"metadata":{},"sourceType":"module"}